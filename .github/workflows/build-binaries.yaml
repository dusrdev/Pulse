name: Build and Publish Binaries

on:
  workflow_dispatch:

jobs:
  build:
    name: Build Binaries
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            arch: x64
            platform: Windows
          - os: windows-latest
            arch: arm64
            platform: Windows
          - os: ubuntu-latest
            arch: x64
            platform: Linux
          - os: ubuntu-latest
            arch: arm64
            platform: Linux
          - os: macos-latest
            arch: x64
            platform: MacOS
          - os: macos-latest
            arch: arm64
            platform: MacOS

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore Dependencies
        run: dotnet restore src/Pulse/Pulse.csproj

      - name: Publish
        run: dotnet publish src/Pulse/Pulse.csproj -c Release
        env:
          DOTNET_ROOT: ${{ env.DOTNET_ROOT }}

      - name: Determine Executable Name
        id: exe_name
        run: |
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            echo "exe=Pulse.exe" >> $GITHUB_ENV
          else
            echo "exe=Pulse" >> $GITHUB_ENV
          fi
        shell: bash

      # Packaging for Windows
      - name: Package Executable (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          mkdir package
          cp src/Pulse/bin/Release/net8.0/*/${{ env.exe }} package/
          Compress-Archive -Path package\${{ env.exe }} -DestinationPath Pulse-${{ matrix.platform }}-${{ matrix.arch }}.zip
        shell: pwsh

      # Packaging for Linux and MacOS
      - name: Package Executable (Unix)
        if: matrix.os != 'windows-latest'
        run: |
          mkdir -p package
          cp src/Pulse/bin/Release/net8.0/*/${{ env.exe }} package/
          zip -j Pulse-${{ matrix.platform }}-${{ matrix.arch }}.zip package/${{ env.exe }}
        shell: bash

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Pulse-${{ matrix.platform }}-${{ matrix.arch }}
          path: Pulse-${{ matrix.platform }}-${{ matrix.arch }}.zip

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup .NET to Extract Version
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Extract Version from Pulse.csproj
        id: get_version
        run: |
          version=$(grep -oPm1 "(?<=<Version>)[^<]+" src/Pulse/Pulse.csproj)
          echo "version=$version" >> $GITHUB_OUTPUT
        shell: bash

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts/

      - name: Create and Upload Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.get_version.outputs.version }}
          name: Release ${{ steps.get_version.outputs.version }}
          files: artifacts/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}